#include<bits/stdc++.h>
#define int long long int
#define ll long long int
#define pb push_back
#define debug(...) __f (#__VA_ARGS__, __VA_ARGS__)
using namespace std;
/*B U G*/
template <typename Arg1>
void __f (const char* name, Arg1&& arg1) { cout << name << " : " << arg1 << endl; }
template <typename Arg1, typename... Args>
void __f (const char* names, Arg1&& arg1, Args&&... args){const char* comma = strchr (names + 1, ',');cout.write (names, comma - names) << " : " << arg1 << " | "; __f (comma + 1, args...);}
/*B U G*/
class Solution{
public:
	vector<int> bfsOfGraph(int V, vector<int> adj[]) {
	        // Code here
	        vector<int> bfs;
	        vector<int> vis(V,0);
	        queue<int> q;
	        
	        q.push(0);
	        vis[0] = 1;
	        while(!q.empty()){
	            int node = q.front();
	            bfs.push_back(node);
	            q.pop();
	            
	            for(auto it: adj[node]){
	                if(!vis[it]){
	                    q.push(it);
	                    vis[it] = 1;
	                }
	            }
	        }
	       	return bfs;
	    }
};	    

void solve(int tc){
	int n, e;
	cin>>n>>e;
	vector<int> adj[n];
	for (int i = 0; i < n; ++i)
	{	
		int a, b;
		cin>>a>>b;
		adj[a].push_back(b);
		// adj[b].push_back(a);
	}
	Solution obj;
	vector<int> ans = obj.bfsOfGraph(n, adj);
	for (int i = 0; i < ans.size(); ++i)
	{
		cout<<ans[i]<<" ";
	}
	cout<<endl;
}

int32_t main(){
	ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
#ifndef ONLINE_JUDGE
	freopen("input.txt","r",stdin);
	freopen("output.txt","w",stdout);
	freopen("error.txt","w",stderr);
#endif
	int t=1;
	// cin>>t;
	for(int i = 0; i<t; i++){
		solve(i);
	}
	return 0;
}
