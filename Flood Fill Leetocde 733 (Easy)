class Solution {
public:
    vector<vector<int>> floodFill(vector<vector<int>>& image, int sr, int sc, int color) {
        int n = image.size();
        int m = image[0].size();
        int color1 = image[sr][sc];
        image[sr][sc] = color;
        vector<vector<int>> vis(n, vector<int>(m,0));
        queue<pair<pair<int,int>, int>> q;
        q.push({{sr, sc}, color1});
        
        int drow[] = {-1, 0, 1, 0};
        int dcol[] = {0, -1, 0, 1};
        while(!q.empty()){
            sr = q.front().first.first;
            sc = q.front().first.second;
            q.pop();
            for(int i = 0; i<4; ++i){
                int nrow = sr + drow[i];
                int ncol = sc + dcol[i];
                if(nrow>=0 && nrow<n && ncol>=0 && ncol<m && !vis[nrow][ncol] && image[nrow][ncol] == color1){
                    vis[nrow][ncol] = 1;
                    image[nrow][ncol] = color;
                    q.push({{nrow, ncol}, color1});
                }
            }
        }
        return image;
    }
};
